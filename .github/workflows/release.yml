name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Upgrade pip/setuptools/wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Preinstall pinned scientific stack (wheels only)
        run: |
          python -m pip install --only-binary=:all: numpy==2.0.2 scipy==1.13.1 scikit-learn==1.6.1

      - name: Install dependencies
        run: |
          pip install -r requirements.txt pyinstaller

      - name: Run tests
        run: |
          python -m pip install pytest
          pytest -q

      - name: Build app (macOS)
        if: runner.os == 'macOS'
        run: |
          pyinstaller --noconfirm --windowed --name PhotoFilterGUI gui_app.py
          cd dist
          ditto -c -k --sequesterRsrc --keepParent PhotoFilterGUI.app PhotoFilterGUI-macOS.zip

      - name: Build app (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          pyinstaller --noconfirm --windowed --name PhotoFilterGUI gui_app.py
          if (Test-Path dist/PhotoFilterGUI-Windows.zip) { Remove-Item dist/PhotoFilterGUI-Windows.zip -Force }
          Compress-Archive -Path dist/PhotoFilterGUI/* -DestinationPath dist/PhotoFilterGUI-Windows.zip -Force

      - name: Upload Release (macOS)
        if: runner.os == 'macOS'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/PhotoFilterGUI-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/PhotoFilterGUI-Windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: PhotoFilterGUI-${{ runner.os }}
          path: |
            dist/PhotoFilterGUI-macOS.zip
            dist/PhotoFilterGUI-Windows.zip
            dist/PhotoFilterGUI/


